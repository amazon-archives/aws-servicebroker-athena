- name: include plan vars
  include_vars:
    file: "{{ _apb_plan_id }}.yml"
- name: generate b62 hash
  shell: "16to62 {{ params_hash }}"
  register: command_output
- name: set fact
  set_fact:
    stack_suffix: "{{ command_output.stdout }}"
- name: Log stack suffix
  debug:
    msg: "stack_suffix: {{ stack_suffix }}"
- name: Launch athena
  cloudformation:
    stack_name: "apb-athena-{{ stack_suffix }}"
    state: "present"
    region: "{{ region }}"
    disable_rollback: false
    template: "{{ role_path }}/files/Athena.yml"
    role_arn: "{{ aws_cloudformation_role_arn }}"
    template_parameters:
      S3Source: "{{ S3Source }}"
      TableColumns: "{{ TableColumns }}"
      RowFormat: "{{ RowFormat }}"
      SerdeName: "{{ SerdeName }}"
      SerdeProperties: "{{ SerdeProperties }}"
      DBName: "{{ database_name }}"
      TableName: "{{ table_name }}"
    tags:
      ServiceBrokerId: "{{ application_name }}"
  register: athena
- name: Check for CloudFormation error logs
  debug:
    var: athena.log
  failed_when: athena.log | length > 0
- name: Create IAM user
  iam:
    iam_type: user
    name: "apb-athena-iam-{{ stack_suffix }}"
    state: present
    access_key_state: create
  register: iam_output
- name: Generate IAM policy temporary json file
  template:
    src: "{{ role_path }}/files/AthenaAccessPolicy.json.j2"
    dest: "/tmp/{{ application_name | checksum }}.json"
- name: Attach IAM policy
  iam_policy:
    iam_type: user
    iam_name: "apb-athena-iam-{{ stack_suffix }}"
    policy_name: "Athena-APB-{{ stack_suffix }}"
    state: present
    policy_document: "/tmp/{{ application_name | checksum }}.json"
- name: Remove IAM policy temporary json file
  file:
    state: absent
    path: /tmp/{{ application_name | checksum }}.json
- name: Encode bind credentials
  asb_encode_binding:
    fields:
      ATHENA_TABLE_NAME:        "{{ table_name }}"
      ATHENA_REGION:            "{{ region }}"
      ATHENA_DB_NAME:           "{{ database_name }}"
      ATHENA_ACCESS_KEY_ID:     "{{ iam_output.user_meta.access_keys[0].access_key_id }}"
      ATHENA_SECRET_ACCESS_KEY: "{{ iam_output.user_meta.access_keys[0].secret_access_key }}"
      ATHENA_LOCATION:          "{{ S3Source }}"
      ATHENA_OUPUT_LOCATION:    "{{ athena.stack_outputs.OutputLocation }}"